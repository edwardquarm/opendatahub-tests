
-------------------------------------------------------------- test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw] --------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------
2025-07-25T11:58:15.570560 conftest [32mINFO[0m Executing session fixture: admin_client[0m
2025-07-25T11:58:15.592603 conftest [32mINFO[0m Executing session fixture: dsc_resource[0m
2025-07-25T11:58:16.122229 conftest [32mINFO[0m Executing package fixture: enabled_kserve_in_dsc[0m
2025-07-25T11:58:16.265861 conftest [32mINFO[0m Executing session fixture: _syrupy_apply_ide_patches[0m
2025-07-25T11:58:16.266417 conftest [32mINFO[0m Executing session fixture: event_loop_policy[0m
2025-07-25T11:58:16.266980 conftest [32mINFO[0m Executing session fixture: os_path_environment[0m
2025-07-25T11:58:16.267379 conftest [32mINFO[0m Executing session fixture: tmpdir_factory[0m
2025-07-25T11:58:16.267706 conftest [32mINFO[0m Executing session fixture: bin_directory[0m
2025-07-25T11:58:16.273155 conftest [32mINFO[0m Executing session fixture: oc_binary_path[0m
2025-07-25T11:58:25.351144 conftest [32mINFO[0m Executing session fixture: bin_directory_to_os_path[0m
2025-07-25T11:58:25.351742 conftest [32mINFO[0m Executing session fixture: nodes[0m
2025-07-25T11:58:25.733683 conftest [32mINFO[0m Executing session fixture: dsci_resource[0m
2025-07-25T11:58:25.835647 conftest [32mINFO[0m Executing session fixture: record_testsuite_property[0m
2025-07-25T11:58:25.836788 conftest [32mINFO[0m Executing session fixture: junitxml_plugin[0m
2025-07-25T11:58:25.837720 conftest [32mINFO[0m Executing session fixture: cluster_sanity_scope_session[0m

TEST: TestVLLMModelCarRaw.test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:31.691362 conftest [31mERROR[0m fixturedef = <FixtureDef argname='cluster_sanity_scope_session' scope='session' baseid='tests'>
request = <SubRequest 'cluster_sanity_scope_session' for <Function test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw]>>

    @pytest.hookimpl(wrapper=True)
    def pytest_fixture_setup(fixturedef: FixtureDef, request) -> object | None:
        asyncio_mode = _get_asyncio_mode(request.config)
        if not _is_asyncio_fixture_function(fixturedef.func):
            if asyncio_mode == Mode.STRICT:
                # Ignore async fixtures without explicit asyncio mark in strict mode
                # This applies to pytest_trio fixtures, for example
>               return (yield)
                        ^^^^^

.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py:681:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/conftest.py:588: in cluster_sanity_scope_session
    verify_cluster_sanity(
utilities/infra.py:1101: in verify_cluster_sanity
    wait_for_dsc_status_ready(dsc_resource=dsc_resource)
.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:276: in wrapper
    for sample in TimeoutSampler(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <timeout_sampler.TimeoutSampler object at 0x109865490>

    def __iter__(self) -> Any:
        """
        Call `func` and yield the result, or raise an exception on timeout.

        Yields:
            any: Return value from `func`

        Raises:
            TimeoutExpiredError: if `func` takes longer than `wait_timeout` seconds to return a value
        """
        timeout_watch = TimeoutWatch(timeout=self.wait_timeout)
        if self.print_log:
            log = (
                f"Waiting for {self.wait_timeout} seconds"
                f" [{datetime.timedelta(seconds=self.wait_timeout)}], retry every"
                f" {self.sleep} seconds."
            )

            if self.print_func_log:
                log += f" ({self._func_log})"

            LOGGER.info(log)

        last_exp = None
        elapsed_time = None
        while timeout_watch.remaining_time() > 0:
            try:
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()
                yield self.func(*self.func_args, **self.func_kwargs)
                time.sleep(self.sleep)
                elapsed_time = None

            except Exception as exp:
                last_exp = exp
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()

                if not self._should_ignore_exception(exp=last_exp):
                    raise TimeoutExpiredError(
                        self._get_exception_log(exp=last_exp), last_exp=last_exp, elapsed_time=elapsed_time
                    )

                time.sleep(self.sleep)
                elapsed_time = None

            finally:
                if self.print_log and elapsed_time:
                    LOGGER.info(_elapsed_time_log(elapsed_time=elapsed_time))

>       raise TimeoutExpiredError(self._get_exception_log(exp=last_exp), last_exp=last_exp)
E       timeout_sampler.TimeoutExpiredError: Timed Out: 120
E       Function: utilities.infra.wait_for_dsc_status_ready  Kwargs: {'dsc_resource': <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>}
E       Last exception: ResourceNotReadyError: DSC default-dsc is not ready.
E       Current status: {'components': {'codeflare': {'managementState': 'Managed',
E        'releases': [{'name': 'CodeFlare operator',
E        'repoUrl': 'https://github.com/project-codeflare/codeflare-operator',
E        'version': '1.15.0'}]},
E        'dashboard': {'managementState': 'Managed',
E        'url': 'rhods-dashboard-redhat-ods-applications.apps.ods-az-amd-02-pool-5smt9.azure.rh-ods.com'},
E        'datasciencepipelines': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Pipelines',
E        'repoUrl': 'https://github.com/kubeflow/pipelines',
E        'version': '2.5.0'}]},
E        'feastoperator': {'managementState': 'Removed'},
E        'kserve': {'defaultDeploymentMode': 'Serverless',
E        'managementState': 'Managed',
E        'releases': [{'name': 'KServe',
E        'repoUrl': 'https://github.com/kserve/kserve/',
E        'version': 'v0.14.0'}],
E        'serverlessMode': 'Managed'},
E        'kueue': {'managementState': 'Managed',
E        'releases': [{'name': 'kueue',
E        'repoUrl': 'https://github.com/kubernetes-sigs/kueue',
E        'version': '0.11.6'}]},
E        'llamastackoperator': {'managementState': 'Removed'},
E        'modelmeshserving': {'managementState': 'Managed',
E        'releases': [{'name': 'ModelMesh Serving',
E        'repoUrl': 'https://github.com/kserve/modelmesh-serving',
E        'version': 'v0.12.0'}]},
E        'modelregistry': {'managementState': 'Removed'},
E        'ray': {'managementState': 'Managed',
E        'releases': [{'name': 'KubeRay',
E        'repoUrl': 'https://github.com/ray-project/kuberay',
E        'version': '1.3.2'}]},
E        'trainingoperator': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Training Operator',
E        'repoUrl': 'https://github.com/kubeflow/trainer',
E        'version': '1.9.0'}]},
E        'trustyai': {'managementState': 'Managed',
E        'releases': [{'name': 'TrustyAI operator',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI service',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-explainability',
E        'version': 'v0.28.0'},
E                     {'name': 'TrustyAI LMEval driver',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI LMEval job',
E        'repoUrl': 'https://github.com/EleutherAI/lm-evaluation-harness',
E        'version': 'v0.4.8'},
E                     {'name': 'TrustyAI Guardrails orchestrator',
E        'repoUrl': 'https://github.com/foundation-model-stack/fms-guardrails-orchestrator',
E        'version': '0.9.4'},
E                     {'name': 'TrustyAI builtin detectors',
E        'repoUrl': 'https://github.com/trustyai-explainability/guardrails-regex-detector',
E        'version': 'v0.2.0'},
E                     {'name': 'TrustyAI sidecar gateway',
E        'repoUrl': 'https://github.com/trustyai-explainability/vllm-orchestrator-gateway',
E        'version': 'v0.2.1'}]},
E        'workbenches': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Notebook Controller',
E        'repoUrl': 'https://github.com/kubeflow/kubeflow',
E        'version': '1.10.0'}],
E        'workbenchNamespace': 'rhods-notebooks'}},
E        'conditions': [{'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'Ready'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'observedGeneration': 1,
E        'status': 'True',
E        'type': 'ProvisioningSucceeded'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'ComponentsReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'CodeFlareReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DashboardReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DataSciencePipelinesReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'FeastOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'failure deploying resource {map[apiVersion:maistra.io/v1 '
E                   'kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: apply failed maistra.io/v1, '
E                   'Kind=ServiceMeshMember: unable to patch object '
E                   '&{map[apiVersion:maistra.io/v1 kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: Internal error occurred: failed '
E                   'calling webhook "smm.validation.maistra.io": failed to call '
E                   'webhook: Post '
E                   '"https://istio-operator-service.openshift-operators.svc:443/validate-smm?timeout=10s": '
E                   'no endpoints available for service "istio-operator-service"',
E        'reason': 'Error',
E        'status': 'False',
E        'type': 'KserveReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'KueueReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'LlamaStackOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelControllerReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelMeshServingReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'ModelRegistryReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'RayReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrainingOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrustyAIReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'WorkbenchesReady'}],
E        'installedComponents': {'codeflare': True,
E        'dashboard': True,
E        'data-science-pipelines-operator': True,
E        'feastoperator': False,
E        'kserve': True,
E        'kueue': True,
E        'llamastackoperator': False,
E        'model-mesh': True,
E        'model-registry-operator': False,
E        'ray': True,
E        'trainingoperator': True,
E        'trustyai': True,
E        'workbenches': True},
E        'observedGeneration': 1,
E        'phase': 'Not Ready',
E        'release': {'name': 'OpenShift AI Self-Managed', 'version': '2.22.0'}}.

.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:179: TimeoutExpiredError[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

------------------------------------------------------------------- test_oci_model_car_raw_openai_inference[granite-3.1-8b-starter-v2-raw] -------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarRaw.test_oci_model_car_raw_openai_inference[granite-3.1-8b-starter-v2-raw] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:31.740461 conftest [31mERROR[0m request = <SubRequest 'cluster_sanity_scope_session' for <Function test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw]>>
nodes = [<ocp_resources.node.Node object at 0x109922d80>, <ocp_resources.node.Node object at 0x109922e70>, <ocp_resources.node...ject at 0x109922f30>, <ocp_resources.node.Node object at 0x109922f60>, <ocp_resources.node.Node object at 0x109922f90>]
dsci_resource = <ocp_resources.dsc_initialization.DSCInitialization object at 0x109864f20>, dsc_resource = <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>
junitxml_plugin = <function record_testsuite_property.<locals>.record_func at 0x109713d80>

    @pytest.fixture(scope="session")
    def cluster_sanity_scope_session(
        request: FixtureRequest,
        nodes: list[Node],
        dsci_resource: DSCInitialization,
        dsc_resource: DataScienceCluster,
        junitxml_plugin: Callable[[str, object], None],
    ) -> None:
>       verify_cluster_sanity(
            request=request,
            nodes=nodes,
            dsc_resource=dsc_resource,
            dsci_resource=dsci_resource,
            junitxml_property=junitxml_plugin,
        )

tests/conftest.py:588:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities/infra.py:1101: in verify_cluster_sanity
    wait_for_dsc_status_ready(dsc_resource=dsc_resource)
.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:276: in wrapper
    for sample in TimeoutSampler(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <timeout_sampler.TimeoutSampler object at 0x109865490>

    def __iter__(self) -> Any:
        """
        Call `func` and yield the result, or raise an exception on timeout.

        Yields:
            any: Return value from `func`

        Raises:
            TimeoutExpiredError: if `func` takes longer than `wait_timeout` seconds to return a value
        """
        timeout_watch = TimeoutWatch(timeout=self.wait_timeout)
        if self.print_log:
            log = (
                f"Waiting for {self.wait_timeout} seconds"
                f" [{datetime.timedelta(seconds=self.wait_timeout)}], retry every"
                f" {self.sleep} seconds."
            )

            if self.print_func_log:
                log += f" ({self._func_log})"

            LOGGER.info(log)

        last_exp = None
        elapsed_time = None
        while timeout_watch.remaining_time() > 0:
            try:
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()
                yield self.func(*self.func_args, **self.func_kwargs)
                time.sleep(self.sleep)
                elapsed_time = None

            except Exception as exp:
                last_exp = exp
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()

                if not self._should_ignore_exception(exp=last_exp):
                    raise TimeoutExpiredError(
                        self._get_exception_log(exp=last_exp), last_exp=last_exp, elapsed_time=elapsed_time
                    )

                time.sleep(self.sleep)
                elapsed_time = None

            finally:
                if self.print_log and elapsed_time:
                    LOGGER.info(_elapsed_time_log(elapsed_time=elapsed_time))

>       raise TimeoutExpiredError(self._get_exception_log(exp=last_exp), last_exp=last_exp)
E       timeout_sampler.TimeoutExpiredError: Timed Out: 120
E       Function: utilities.infra.wait_for_dsc_status_ready  Kwargs: {'dsc_resource': <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>}
E       Last exception: ResourceNotReadyError: DSC default-dsc is not ready.
E       Current status: {'components': {'codeflare': {'managementState': 'Managed',
E        'releases': [{'name': 'CodeFlare operator',
E        'repoUrl': 'https://github.com/project-codeflare/codeflare-operator',
E        'version': '1.15.0'}]},
E        'dashboard': {'managementState': 'Managed',
E        'url': 'rhods-dashboard-redhat-ods-applications.apps.ods-az-amd-02-pool-5smt9.azure.rh-ods.com'},
E        'datasciencepipelines': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Pipelines',
E        'repoUrl': 'https://github.com/kubeflow/pipelines',
E        'version': '2.5.0'}]},
E        'feastoperator': {'managementState': 'Removed'},
E        'kserve': {'defaultDeploymentMode': 'Serverless',
E        'managementState': 'Managed',
E        'releases': [{'name': 'KServe',
E        'repoUrl': 'https://github.com/kserve/kserve/',
E        'version': 'v0.14.0'}],
E        'serverlessMode': 'Managed'},
E        'kueue': {'managementState': 'Managed',
E        'releases': [{'name': 'kueue',
E        'repoUrl': 'https://github.com/kubernetes-sigs/kueue',
E        'version': '0.11.6'}]},
E        'llamastackoperator': {'managementState': 'Removed'},
E        'modelmeshserving': {'managementState': 'Managed',
E        'releases': [{'name': 'ModelMesh Serving',
E        'repoUrl': 'https://github.com/kserve/modelmesh-serving',
E        'version': 'v0.12.0'}]},
E        'modelregistry': {'managementState': 'Removed'},
E        'ray': {'managementState': 'Managed',
E        'releases': [{'name': 'KubeRay',
E        'repoUrl': 'https://github.com/ray-project/kuberay',
E        'version': '1.3.2'}]},
E        'trainingoperator': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Training Operator',
E        'repoUrl': 'https://github.com/kubeflow/trainer',
E        'version': '1.9.0'}]},
E        'trustyai': {'managementState': 'Managed',
E        'releases': [{'name': 'TrustyAI operator',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI service',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-explainability',
E        'version': 'v0.28.0'},
E                     {'name': 'TrustyAI LMEval driver',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI LMEval job',
E        'repoUrl': 'https://github.com/EleutherAI/lm-evaluation-harness',
E        'version': 'v0.4.8'},
E                     {'name': 'TrustyAI Guardrails orchestrator',
E        'repoUrl': 'https://github.com/foundation-model-stack/fms-guardrails-orchestrator',
E        'version': '0.9.4'},
E                     {'name': 'TrustyAI builtin detectors',
E        'repoUrl': 'https://github.com/trustyai-explainability/guardrails-regex-detector',
E        'version': 'v0.2.0'},
E                     {'name': 'TrustyAI sidecar gateway',
E        'repoUrl': 'https://github.com/trustyai-explainability/vllm-orchestrator-gateway',
E        'version': 'v0.2.1'}]},
E        'workbenches': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Notebook Controller',
E        'repoUrl': 'https://github.com/kubeflow/kubeflow',
E        'version': '1.10.0'}],
E        'workbenchNamespace': 'rhods-notebooks'}},
E        'conditions': [{'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'Ready'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'observedGeneration': 1,
E        'status': 'True',
E        'type': 'ProvisioningSucceeded'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'ComponentsReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'CodeFlareReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DashboardReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DataSciencePipelinesReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'FeastOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'failure deploying resource {map[apiVersion:maistra.io/v1 '
E                   'kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: apply failed maistra.io/v1, '
E                   'Kind=ServiceMeshMember: unable to patch object '
E                   '&{map[apiVersion:maistra.io/v1 kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: Internal error occurred: failed '
E                   'calling webhook "smm.validation.maistra.io": failed to call '
E                   'webhook: Post '
E                   '"https://istio-operator-service.openshift-operators.svc:443/validate-smm?timeout=10s": '
E                   'no endpoints available for service "istio-operator-service"',
E        'reason': 'Error',
E        'status': 'False',
E        'type': 'KserveReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'KueueReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'LlamaStackOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelControllerReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelMeshServingReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'ModelRegistryReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'RayReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrainingOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrustyAIReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'WorkbenchesReady'}],
E        'installedComponents': {'codeflare': True,
E        'dashboard': True,
E        'data-science-pipelines-operator': True,
E        'feastoperator': False,
E        'kserve': True,
E        'kueue': True,
E        'llamastackoperator': False,
E        'model-mesh': True,
E        'model-registry-operator': False,
E        'ray': True,
E        'trainingoperator': True,
E        'trustyai': True,
E        'workbenches': True},
E        'observedGeneration': 1,
E        'phase': 'Not Ready',
E        'release': {'name': 'OpenShift AI Self-Managed', 'version': '2.22.0'}}.

.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:179: TimeoutExpiredError[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

------------------------------------------------------------- test_oci_model_car_raw_openai_inference[granite-3.1-8b-instruct-quantized.w8a8-raw] -------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarRaw.test_oci_model_car_raw_openai_inference[granite-3.1-8b-instruct-quantized.w8a8-raw] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:31.795882 conftest [31mERROR[0m request = <SubRequest 'cluster_sanity_scope_session' for <Function test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw]>>
nodes = [<ocp_resources.node.Node object at 0x109922d80>, <ocp_resources.node.Node object at 0x109922e70>, <ocp_resources.node...ject at 0x109922f30>, <ocp_resources.node.Node object at 0x109922f60>, <ocp_resources.node.Node object at 0x109922f90>]
dsci_resource = <ocp_resources.dsc_initialization.DSCInitialization object at 0x109864f20>, dsc_resource = <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>
junitxml_plugin = <function record_testsuite_property.<locals>.record_func at 0x109713d80>

    @pytest.fixture(scope="session")
    def cluster_sanity_scope_session(
        request: FixtureRequest,
        nodes: list[Node],
        dsci_resource: DSCInitialization,
        dsc_resource: DataScienceCluster,
        junitxml_plugin: Callable[[str, object], None],
    ) -> None:
>       verify_cluster_sanity(
            request=request,
            nodes=nodes,
            dsc_resource=dsc_resource,
            dsci_resource=dsci_resource,
            junitxml_property=junitxml_plugin,
        )

tests/conftest.py:588:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities/infra.py:1101: in verify_cluster_sanity
    wait_for_dsc_status_ready(dsc_resource=dsc_resource)
.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:276: in wrapper
    for sample in TimeoutSampler(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <timeout_sampler.TimeoutSampler object at 0x109865490>

    def __iter__(self) -> Any:
        """
        Call `func` and yield the result, or raise an exception on timeout.

        Yields:
            any: Return value from `func`

        Raises:
            TimeoutExpiredError: if `func` takes longer than `wait_timeout` seconds to return a value
        """
        timeout_watch = TimeoutWatch(timeout=self.wait_timeout)
        if self.print_log:
            log = (
                f"Waiting for {self.wait_timeout} seconds"
                f" [{datetime.timedelta(seconds=self.wait_timeout)}], retry every"
                f" {self.sleep} seconds."
            )

            if self.print_func_log:
                log += f" ({self._func_log})"

            LOGGER.info(log)

        last_exp = None
        elapsed_time = None
        while timeout_watch.remaining_time() > 0:
            try:
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()
                yield self.func(*self.func_args, **self.func_kwargs)
                time.sleep(self.sleep)
                elapsed_time = None

            except Exception as exp:
                last_exp = exp
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()

                if not self._should_ignore_exception(exp=last_exp):
                    raise TimeoutExpiredError(
                        self._get_exception_log(exp=last_exp), last_exp=last_exp, elapsed_time=elapsed_time
                    )

                time.sleep(self.sleep)
                elapsed_time = None

            finally:
                if self.print_log and elapsed_time:
                    LOGGER.info(_elapsed_time_log(elapsed_time=elapsed_time))

>       raise TimeoutExpiredError(self._get_exception_log(exp=last_exp), last_exp=last_exp)
E       timeout_sampler.TimeoutExpiredError: Timed Out: 120
E       Function: utilities.infra.wait_for_dsc_status_ready  Kwargs: {'dsc_resource': <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>}
E       Last exception: ResourceNotReadyError: DSC default-dsc is not ready.
E       Current status: {'components': {'codeflare': {'managementState': 'Managed',
E        'releases': [{'name': 'CodeFlare operator',
E        'repoUrl': 'https://github.com/project-codeflare/codeflare-operator',
E        'version': '1.15.0'}]},
E        'dashboard': {'managementState': 'Managed',
E        'url': 'rhods-dashboard-redhat-ods-applications.apps.ods-az-amd-02-pool-5smt9.azure.rh-ods.com'},
E        'datasciencepipelines': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Pipelines',
E        'repoUrl': 'https://github.com/kubeflow/pipelines',
E        'version': '2.5.0'}]},
E        'feastoperator': {'managementState': 'Removed'},
E        'kserve': {'defaultDeploymentMode': 'Serverless',
E        'managementState': 'Managed',
E        'releases': [{'name': 'KServe',
E        'repoUrl': 'https://github.com/kserve/kserve/',
E        'version': 'v0.14.0'}],
E        'serverlessMode': 'Managed'},
E        'kueue': {'managementState': 'Managed',
E        'releases': [{'name': 'kueue',
E        'repoUrl': 'https://github.com/kubernetes-sigs/kueue',
E        'version': '0.11.6'}]},
E        'llamastackoperator': {'managementState': 'Removed'},
E        'modelmeshserving': {'managementState': 'Managed',
E        'releases': [{'name': 'ModelMesh Serving',
E        'repoUrl': 'https://github.com/kserve/modelmesh-serving',
E        'version': 'v0.12.0'}]},
E        'modelregistry': {'managementState': 'Removed'},
E        'ray': {'managementState': 'Managed',
E        'releases': [{'name': 'KubeRay',
E        'repoUrl': 'https://github.com/ray-project/kuberay',
E        'version': '1.3.2'}]},
E        'trainingoperator': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Training Operator',
E        'repoUrl': 'https://github.com/kubeflow/trainer',
E        'version': '1.9.0'}]},
E        'trustyai': {'managementState': 'Managed',
E        'releases': [{'name': 'TrustyAI operator',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI service',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-explainability',
E        'version': 'v0.28.0'},
E                     {'name': 'TrustyAI LMEval driver',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI LMEval job',
E        'repoUrl': 'https://github.com/EleutherAI/lm-evaluation-harness',
E        'version': 'v0.4.8'},
E                     {'name': 'TrustyAI Guardrails orchestrator',
E        'repoUrl': 'https://github.com/foundation-model-stack/fms-guardrails-orchestrator',
E        'version': '0.9.4'},
E                     {'name': 'TrustyAI builtin detectors',
E        'repoUrl': 'https://github.com/trustyai-explainability/guardrails-regex-detector',
E        'version': 'v0.2.0'},
E                     {'name': 'TrustyAI sidecar gateway',
E        'repoUrl': 'https://github.com/trustyai-explainability/vllm-orchestrator-gateway',
E        'version': 'v0.2.1'}]},
E        'workbenches': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Notebook Controller',
E        'repoUrl': 'https://github.com/kubeflow/kubeflow',
E        'version': '1.10.0'}],
E        'workbenchNamespace': 'rhods-notebooks'}},
E        'conditions': [{'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'Ready'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'observedGeneration': 1,
E        'status': 'True',
E        'type': 'ProvisioningSucceeded'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'ComponentsReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'CodeFlareReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DashboardReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DataSciencePipelinesReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'FeastOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'failure deploying resource {map[apiVersion:maistra.io/v1 '
E                   'kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: apply failed maistra.io/v1, '
E                   'Kind=ServiceMeshMember: unable to patch object '
E                   '&{map[apiVersion:maistra.io/v1 kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: Internal error occurred: failed '
E                   'calling webhook "smm.validation.maistra.io": failed to call '
E                   'webhook: Post '
E                   '"https://istio-operator-service.openshift-operators.svc:443/validate-smm?timeout=10s": '
E                   'no endpoints available for service "istio-operator-service"',
E        'reason': 'Error',
E        'status': 'False',
E        'type': 'KserveReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'KueueReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'LlamaStackOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelControllerReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelMeshServingReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'ModelRegistryReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'RayReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrainingOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrustyAIReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'WorkbenchesReady'}],
E        'installedComponents': {'codeflare': True,
E        'dashboard': True,
E        'data-science-pipelines-operator': True,
E        'feastoperator': False,
E        'kserve': True,
E        'kueue': True,
E        'llamastackoperator': False,
E        'model-mesh': True,
E        'model-registry-operator': False,
E        'ray': True,
E        'trainingoperator': True,
E        'trustyai': True,
E        'workbenches': True},
E        'observedGeneration': 1,
E        'phase': 'Not Ready',
E        'release': {'name': 'OpenShift AI Self-Managed', 'version': '2.22.0'}}.

.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:179: TimeoutExpiredError[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

--------------------------------------------------------------------- test_oci_model_car_raw_openai_inference[Llama-3.1-8B-Instruct-raw] ---------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarRaw.test_oci_model_car_raw_openai_inference[Llama-3.1-8B-Instruct-raw] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:31.840511 conftest [31mERROR[0m request = <SubRequest 'cluster_sanity_scope_session' for <Function test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw]>>
nodes = [<ocp_resources.node.Node object at 0x109922d80>, <ocp_resources.node.Node object at 0x109922e70>, <ocp_resources.node...ject at 0x109922f30>, <ocp_resources.node.Node object at 0x109922f60>, <ocp_resources.node.Node object at 0x109922f90>]
dsci_resource = <ocp_resources.dsc_initialization.DSCInitialization object at 0x109864f20>, dsc_resource = <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>
junitxml_plugin = <function record_testsuite_property.<locals>.record_func at 0x109713d80>

    @pytest.fixture(scope="session")
    def cluster_sanity_scope_session(
        request: FixtureRequest,
        nodes: list[Node],
        dsci_resource: DSCInitialization,
        dsc_resource: DataScienceCluster,
        junitxml_plugin: Callable[[str, object], None],
    ) -> None:
>       verify_cluster_sanity(
            request=request,
            nodes=nodes,
            dsc_resource=dsc_resource,
            dsci_resource=dsci_resource,
            junitxml_property=junitxml_plugin,
        )

tests/conftest.py:588:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities/infra.py:1101: in verify_cluster_sanity
    wait_for_dsc_status_ready(dsc_resource=dsc_resource)
.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:276: in wrapper
    for sample in TimeoutSampler(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <timeout_sampler.TimeoutSampler object at 0x109865490>

    def __iter__(self) -> Any:
        """
        Call `func` and yield the result, or raise an exception on timeout.

        Yields:
            any: Return value from `func`

        Raises:
            TimeoutExpiredError: if `func` takes longer than `wait_timeout` seconds to return a value
        """
        timeout_watch = TimeoutWatch(timeout=self.wait_timeout)
        if self.print_log:
            log = (
                f"Waiting for {self.wait_timeout} seconds"
                f" [{datetime.timedelta(seconds=self.wait_timeout)}], retry every"
                f" {self.sleep} seconds."
            )

            if self.print_func_log:
                log += f" ({self._func_log})"

            LOGGER.info(log)

        last_exp = None
        elapsed_time = None
        while timeout_watch.remaining_time() > 0:
            try:
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()
                yield self.func(*self.func_args, **self.func_kwargs)
                time.sleep(self.sleep)
                elapsed_time = None

            except Exception as exp:
                last_exp = exp
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()

                if not self._should_ignore_exception(exp=last_exp):
                    raise TimeoutExpiredError(
                        self._get_exception_log(exp=last_exp), last_exp=last_exp, elapsed_time=elapsed_time
                    )

                time.sleep(self.sleep)
                elapsed_time = None

            finally:
                if self.print_log and elapsed_time:
                    LOGGER.info(_elapsed_time_log(elapsed_time=elapsed_time))

>       raise TimeoutExpiredError(self._get_exception_log(exp=last_exp), last_exp=last_exp)
E       timeout_sampler.TimeoutExpiredError: Timed Out: 120
E       Function: utilities.infra.wait_for_dsc_status_ready  Kwargs: {'dsc_resource': <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>}
E       Last exception: ResourceNotReadyError: DSC default-dsc is not ready.
E       Current status: {'components': {'codeflare': {'managementState': 'Managed',
E        'releases': [{'name': 'CodeFlare operator',
E        'repoUrl': 'https://github.com/project-codeflare/codeflare-operator',
E        'version': '1.15.0'}]},
E        'dashboard': {'managementState': 'Managed',
E        'url': 'rhods-dashboard-redhat-ods-applications.apps.ods-az-amd-02-pool-5smt9.azure.rh-ods.com'},
E        'datasciencepipelines': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Pipelines',
E        'repoUrl': 'https://github.com/kubeflow/pipelines',
E        'version': '2.5.0'}]},
E        'feastoperator': {'managementState': 'Removed'},
E        'kserve': {'defaultDeploymentMode': 'Serverless',
E        'managementState': 'Managed',
E        'releases': [{'name': 'KServe',
E        'repoUrl': 'https://github.com/kserve/kserve/',
E        'version': 'v0.14.0'}],
E        'serverlessMode': 'Managed'},
E        'kueue': {'managementState': 'Managed',
E        'releases': [{'name': 'kueue',
E        'repoUrl': 'https://github.com/kubernetes-sigs/kueue',
E        'version': '0.11.6'}]},
E        'llamastackoperator': {'managementState': 'Removed'},
E        'modelmeshserving': {'managementState': 'Managed',
E        'releases': [{'name': 'ModelMesh Serving',
E        'repoUrl': 'https://github.com/kserve/modelmesh-serving',
E        'version': 'v0.12.0'}]},
E        'modelregistry': {'managementState': 'Removed'},
E        'ray': {'managementState': 'Managed',
E        'releases': [{'name': 'KubeRay',
E        'repoUrl': 'https://github.com/ray-project/kuberay',
E        'version': '1.3.2'}]},
E        'trainingoperator': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Training Operator',
E        'repoUrl': 'https://github.com/kubeflow/trainer',
E        'version': '1.9.0'}]},
E        'trustyai': {'managementState': 'Managed',
E        'releases': [{'name': 'TrustyAI operator',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI service',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-explainability',
E        'version': 'v0.28.0'},
E                     {'name': 'TrustyAI LMEval driver',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI LMEval job',
E        'repoUrl': 'https://github.com/EleutherAI/lm-evaluation-harness',
E        'version': 'v0.4.8'},
E                     {'name': 'TrustyAI Guardrails orchestrator',
E        'repoUrl': 'https://github.com/foundation-model-stack/fms-guardrails-orchestrator',
E        'version': '0.9.4'},
E                     {'name': 'TrustyAI builtin detectors',
E        'repoUrl': 'https://github.com/trustyai-explainability/guardrails-regex-detector',
E        'version': 'v0.2.0'},
E                     {'name': 'TrustyAI sidecar gateway',
E        'repoUrl': 'https://github.com/trustyai-explainability/vllm-orchestrator-gateway',
E        'version': 'v0.2.1'}]},
E        'workbenches': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Notebook Controller',
E        'repoUrl': 'https://github.com/kubeflow/kubeflow',
E        'version': '1.10.0'}],
E        'workbenchNamespace': 'rhods-notebooks'}},
E        'conditions': [{'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'Ready'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'observedGeneration': 1,
E        'status': 'True',
E        'type': 'ProvisioningSucceeded'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'ComponentsReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'CodeFlareReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DashboardReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DataSciencePipelinesReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'FeastOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'failure deploying resource {map[apiVersion:maistra.io/v1 '
E                   'kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: apply failed maistra.io/v1, '
E                   'Kind=ServiceMeshMember: unable to patch object '
E                   '&{map[apiVersion:maistra.io/v1 kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: Internal error occurred: failed '
E                   'calling webhook "smm.validation.maistra.io": failed to call '
E                   'webhook: Post '
E                   '"https://istio-operator-service.openshift-operators.svc:443/validate-smm?timeout=10s": '
E                   'no endpoints available for service "istio-operator-service"',
E        'reason': 'Error',
E        'status': 'False',
E        'type': 'KserveReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'KueueReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'LlamaStackOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelControllerReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelMeshServingReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'ModelRegistryReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'RayReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrainingOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrustyAIReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'WorkbenchesReady'}],
E        'installedComponents': {'codeflare': True,
E        'dashboard': True,
E        'data-science-pipelines-operator': True,
E        'feastoperator': False,
E        'kserve': True,
E        'kueue': True,
E        'llamastackoperator': False,
E        'model-mesh': True,
E        'model-registry-operator': False,
E        'ray': True,
E        'trainingoperator': True,
E        'trustyai': True,
E        'workbenches': True},
E        'observedGeneration': 1,
E        'phase': 'Not Ready',
E        'release': {'name': 'OpenShift AI Self-Managed', 'version': '2.22.0'}}.

.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:179: TimeoutExpiredError[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

------------------------------------------------------------ test_oci_model_car_raw_openai_inference[Mistral-7B-Instruct-v0.3-quantized.w4a16-raw] ------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarRaw.test_oci_model_car_raw_openai_inference[Mistral-7B-Instruct-v0.3-quantized.w4a16-raw] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:31.881506 conftest [31mERROR[0m request = <SubRequest 'cluster_sanity_scope_session' for <Function test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw]>>
nodes = [<ocp_resources.node.Node object at 0x109922d80>, <ocp_resources.node.Node object at 0x109922e70>, <ocp_resources.node...ject at 0x109922f30>, <ocp_resources.node.Node object at 0x109922f60>, <ocp_resources.node.Node object at 0x109922f90>]
dsci_resource = <ocp_resources.dsc_initialization.DSCInitialization object at 0x109864f20>, dsc_resource = <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>
junitxml_plugin = <function record_testsuite_property.<locals>.record_func at 0x109713d80>

    @pytest.fixture(scope="session")
    def cluster_sanity_scope_session(
        request: FixtureRequest,
        nodes: list[Node],
        dsci_resource: DSCInitialization,
        dsc_resource: DataScienceCluster,
        junitxml_plugin: Callable[[str, object], None],
    ) -> None:
>       verify_cluster_sanity(
            request=request,
            nodes=nodes,
            dsc_resource=dsc_resource,
            dsci_resource=dsci_resource,
            junitxml_property=junitxml_plugin,
        )

tests/conftest.py:588:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities/infra.py:1101: in verify_cluster_sanity
    wait_for_dsc_status_ready(dsc_resource=dsc_resource)
.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:276: in wrapper
    for sample in TimeoutSampler(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <timeout_sampler.TimeoutSampler object at 0x109865490>

    def __iter__(self) -> Any:
        """
        Call `func` and yield the result, or raise an exception on timeout.

        Yields:
            any: Return value from `func`

        Raises:
            TimeoutExpiredError: if `func` takes longer than `wait_timeout` seconds to return a value
        """
        timeout_watch = TimeoutWatch(timeout=self.wait_timeout)
        if self.print_log:
            log = (
                f"Waiting for {self.wait_timeout} seconds"
                f" [{datetime.timedelta(seconds=self.wait_timeout)}], retry every"
                f" {self.sleep} seconds."
            )

            if self.print_func_log:
                log += f" ({self._func_log})"

            LOGGER.info(log)

        last_exp = None
        elapsed_time = None
        while timeout_watch.remaining_time() > 0:
            try:
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()
                yield self.func(*self.func_args, **self.func_kwargs)
                time.sleep(self.sleep)
                elapsed_time = None

            except Exception as exp:
                last_exp = exp
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()

                if not self._should_ignore_exception(exp=last_exp):
                    raise TimeoutExpiredError(
                        self._get_exception_log(exp=last_exp), last_exp=last_exp, elapsed_time=elapsed_time
                    )

                time.sleep(self.sleep)
                elapsed_time = None

            finally:
                if self.print_log and elapsed_time:
                    LOGGER.info(_elapsed_time_log(elapsed_time=elapsed_time))

>       raise TimeoutExpiredError(self._get_exception_log(exp=last_exp), last_exp=last_exp)
E       timeout_sampler.TimeoutExpiredError: Timed Out: 120
E       Function: utilities.infra.wait_for_dsc_status_ready  Kwargs: {'dsc_resource': <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>}
E       Last exception: ResourceNotReadyError: DSC default-dsc is not ready.
E       Current status: {'components': {'codeflare': {'managementState': 'Managed',
E        'releases': [{'name': 'CodeFlare operator',
E        'repoUrl': 'https://github.com/project-codeflare/codeflare-operator',
E        'version': '1.15.0'}]},
E        'dashboard': {'managementState': 'Managed',
E        'url': 'rhods-dashboard-redhat-ods-applications.apps.ods-az-amd-02-pool-5smt9.azure.rh-ods.com'},
E        'datasciencepipelines': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Pipelines',
E        'repoUrl': 'https://github.com/kubeflow/pipelines',
E        'version': '2.5.0'}]},
E        'feastoperator': {'managementState': 'Removed'},
E        'kserve': {'defaultDeploymentMode': 'Serverless',
E        'managementState': 'Managed',
E        'releases': [{'name': 'KServe',
E        'repoUrl': 'https://github.com/kserve/kserve/',
E        'version': 'v0.14.0'}],
E        'serverlessMode': 'Managed'},
E        'kueue': {'managementState': 'Managed',
E        'releases': [{'name': 'kueue',
E        'repoUrl': 'https://github.com/kubernetes-sigs/kueue',
E        'version': '0.11.6'}]},
E        'llamastackoperator': {'managementState': 'Removed'},
E        'modelmeshserving': {'managementState': 'Managed',
E        'releases': [{'name': 'ModelMesh Serving',
E        'repoUrl': 'https://github.com/kserve/modelmesh-serving',
E        'version': 'v0.12.0'}]},
E        'modelregistry': {'managementState': 'Removed'},
E        'ray': {'managementState': 'Managed',
E        'releases': [{'name': 'KubeRay',
E        'repoUrl': 'https://github.com/ray-project/kuberay',
E        'version': '1.3.2'}]},
E        'trainingoperator': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Training Operator',
E        'repoUrl': 'https://github.com/kubeflow/trainer',
E        'version': '1.9.0'}]},
E        'trustyai': {'managementState': 'Managed',
E        'releases': [{'name': 'TrustyAI operator',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI service',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-explainability',
E        'version': 'v0.28.0'},
E                     {'name': 'TrustyAI LMEval driver',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI LMEval job',
E        'repoUrl': 'https://github.com/EleutherAI/lm-evaluation-harness',
E        'version': 'v0.4.8'},
E                     {'name': 'TrustyAI Guardrails orchestrator',
E        'repoUrl': 'https://github.com/foundation-model-stack/fms-guardrails-orchestrator',
E        'version': '0.9.4'},
E                     {'name': 'TrustyAI builtin detectors',
E        'repoUrl': 'https://github.com/trustyai-explainability/guardrails-regex-detector',
E        'version': 'v0.2.0'},
E                     {'name': 'TrustyAI sidecar gateway',
E        'repoUrl': 'https://github.com/trustyai-explainability/vllm-orchestrator-gateway',
E        'version': 'v0.2.1'}]},
E        'workbenches': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Notebook Controller',
E        'repoUrl': 'https://github.com/kubeflow/kubeflow',
E        'version': '1.10.0'}],
E        'workbenchNamespace': 'rhods-notebooks'}},
E        'conditions': [{'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'Ready'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'observedGeneration': 1,
E        'status': 'True',
E        'type': 'ProvisioningSucceeded'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'ComponentsReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'CodeFlareReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DashboardReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DataSciencePipelinesReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'FeastOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'failure deploying resource {map[apiVersion:maistra.io/v1 '
E                   'kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: apply failed maistra.io/v1, '
E                   'Kind=ServiceMeshMember: unable to patch object '
E                   '&{map[apiVersion:maistra.io/v1 kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: Internal error occurred: failed '
E                   'calling webhook "smm.validation.maistra.io": failed to call '
E                   'webhook: Post '
E                   '"https://istio-operator-service.openshift-operators.svc:443/validate-smm?timeout=10s": '
E                   'no endpoints available for service "istio-operator-service"',
E        'reason': 'Error',
E        'status': 'False',
E        'type': 'KserveReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'KueueReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'LlamaStackOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelControllerReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelMeshServingReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'ModelRegistryReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'RayReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrainingOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrustyAIReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'WorkbenchesReady'}],
E        'installedComponents': {'codeflare': True,
E        'dashboard': True,
E        'data-science-pipelines-operator': True,
E        'feastoperator': False,
E        'kserve': True,
E        'kueue': True,
E        'llamastackoperator': False,
E        'model-mesh': True,
E        'model-registry-operator': False,
E        'ray': True,
E        'trainingoperator': True,
E        'trustyai': True,
E        'workbenches': True},
E        'observedGeneration': 1,
E        'phase': 'Not Ready',
E        'release': {'name': 'OpenShift AI Self-Managed', 'version': '2.22.0'}}.

.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:179: TimeoutExpiredError[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

--------------------------------------------------------------- test_oci_model_car_raw_openai_inference[Qwen2.5-7B-Instruct-quantized.w8a8-raw] ---------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarRaw.test_oci_model_car_raw_openai_inference[Qwen2.5-7B-Instruct-quantized.w8a8-raw] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:31.919358 conftest [31mERROR[0m request = <SubRequest 'cluster_sanity_scope_session' for <Function test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw]>>
nodes = [<ocp_resources.node.Node object at 0x109922d80>, <ocp_resources.node.Node object at 0x109922e70>, <ocp_resources.node...ject at 0x109922f30>, <ocp_resources.node.Node object at 0x109922f60>, <ocp_resources.node.Node object at 0x109922f90>]
dsci_resource = <ocp_resources.dsc_initialization.DSCInitialization object at 0x109864f20>, dsc_resource = <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>
junitxml_plugin = <function record_testsuite_property.<locals>.record_func at 0x109713d80>

    @pytest.fixture(scope="session")
    def cluster_sanity_scope_session(
        request: FixtureRequest,
        nodes: list[Node],
        dsci_resource: DSCInitialization,
        dsc_resource: DataScienceCluster,
        junitxml_plugin: Callable[[str, object], None],
    ) -> None:
>       verify_cluster_sanity(
            request=request,
            nodes=nodes,
            dsc_resource=dsc_resource,
            dsci_resource=dsci_resource,
            junitxml_property=junitxml_plugin,
        )

tests/conftest.py:588:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities/infra.py:1101: in verify_cluster_sanity
    wait_for_dsc_status_ready(dsc_resource=dsc_resource)
.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:276: in wrapper
    for sample in TimeoutSampler(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <timeout_sampler.TimeoutSampler object at 0x109865490>

    def __iter__(self) -> Any:
        """
        Call `func` and yield the result, or raise an exception on timeout.

        Yields:
            any: Return value from `func`

        Raises:
            TimeoutExpiredError: if `func` takes longer than `wait_timeout` seconds to return a value
        """
        timeout_watch = TimeoutWatch(timeout=self.wait_timeout)
        if self.print_log:
            log = (
                f"Waiting for {self.wait_timeout} seconds"
                f" [{datetime.timedelta(seconds=self.wait_timeout)}], retry every"
                f" {self.sleep} seconds."
            )

            if self.print_func_log:
                log += f" ({self._func_log})"

            LOGGER.info(log)

        last_exp = None
        elapsed_time = None
        while timeout_watch.remaining_time() > 0:
            try:
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()
                yield self.func(*self.func_args, **self.func_kwargs)
                time.sleep(self.sleep)
                elapsed_time = None

            except Exception as exp:
                last_exp = exp
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()

                if not self._should_ignore_exception(exp=last_exp):
                    raise TimeoutExpiredError(
                        self._get_exception_log(exp=last_exp), last_exp=last_exp, elapsed_time=elapsed_time
                    )

                time.sleep(self.sleep)
                elapsed_time = None

            finally:
                if self.print_log and elapsed_time:
                    LOGGER.info(_elapsed_time_log(elapsed_time=elapsed_time))

>       raise TimeoutExpiredError(self._get_exception_log(exp=last_exp), last_exp=last_exp)
E       timeout_sampler.TimeoutExpiredError: Timed Out: 120
E       Function: utilities.infra.wait_for_dsc_status_ready  Kwargs: {'dsc_resource': <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>}
E       Last exception: ResourceNotReadyError: DSC default-dsc is not ready.
E       Current status: {'components': {'codeflare': {'managementState': 'Managed',
E        'releases': [{'name': 'CodeFlare operator',
E        'repoUrl': 'https://github.com/project-codeflare/codeflare-operator',
E        'version': '1.15.0'}]},
E        'dashboard': {'managementState': 'Managed',
E        'url': 'rhods-dashboard-redhat-ods-applications.apps.ods-az-amd-02-pool-5smt9.azure.rh-ods.com'},
E        'datasciencepipelines': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Pipelines',
E        'repoUrl': 'https://github.com/kubeflow/pipelines',
E        'version': '2.5.0'}]},
E        'feastoperator': {'managementState': 'Removed'},
E        'kserve': {'defaultDeploymentMode': 'Serverless',
E        'managementState': 'Managed',
E        'releases': [{'name': 'KServe',
E        'repoUrl': 'https://github.com/kserve/kserve/',
E        'version': 'v0.14.0'}],
E        'serverlessMode': 'Managed'},
E        'kueue': {'managementState': 'Managed',
E        'releases': [{'name': 'kueue',
E        'repoUrl': 'https://github.com/kubernetes-sigs/kueue',
E        'version': '0.11.6'}]},
E        'llamastackoperator': {'managementState': 'Removed'},
E        'modelmeshserving': {'managementState': 'Managed',
E        'releases': [{'name': 'ModelMesh Serving',
E        'repoUrl': 'https://github.com/kserve/modelmesh-serving',
E        'version': 'v0.12.0'}]},
E        'modelregistry': {'managementState': 'Removed'},
E        'ray': {'managementState': 'Managed',
E        'releases': [{'name': 'KubeRay',
E        'repoUrl': 'https://github.com/ray-project/kuberay',
E        'version': '1.3.2'}]},
E        'trainingoperator': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Training Operator',
E        'repoUrl': 'https://github.com/kubeflow/trainer',
E        'version': '1.9.0'}]},
E        'trustyai': {'managementState': 'Managed',
E        'releases': [{'name': 'TrustyAI operator',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI service',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-explainability',
E        'version': 'v0.28.0'},
E                     {'name': 'TrustyAI LMEval driver',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI LMEval job',
E        'repoUrl': 'https://github.com/EleutherAI/lm-evaluation-harness',
E        'version': 'v0.4.8'},
E                     {'name': 'TrustyAI Guardrails orchestrator',
E        'repoUrl': 'https://github.com/foundation-model-stack/fms-guardrails-orchestrator',
E        'version': '0.9.4'},
E                     {'name': 'TrustyAI builtin detectors',
E        'repoUrl': 'https://github.com/trustyai-explainability/guardrails-regex-detector',
E        'version': 'v0.2.0'},
E                     {'name': 'TrustyAI sidecar gateway',
E        'repoUrl': 'https://github.com/trustyai-explainability/vllm-orchestrator-gateway',
E        'version': 'v0.2.1'}]},
E        'workbenches': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Notebook Controller',
E        'repoUrl': 'https://github.com/kubeflow/kubeflow',
E        'version': '1.10.0'}],
E        'workbenchNamespace': 'rhods-notebooks'}},
E        'conditions': [{'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'Ready'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'observedGeneration': 1,
E        'status': 'True',
E        'type': 'ProvisioningSucceeded'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'ComponentsReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'CodeFlareReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DashboardReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DataSciencePipelinesReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'FeastOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'failure deploying resource {map[apiVersion:maistra.io/v1 '
E                   'kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: apply failed maistra.io/v1, '
E                   'Kind=ServiceMeshMember: unable to patch object '
E                   '&{map[apiVersion:maistra.io/v1 kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: Internal error occurred: failed '
E                   'calling webhook "smm.validation.maistra.io": failed to call '
E                   'webhook: Post '
E                   '"https://istio-operator-service.openshift-operators.svc:443/validate-smm?timeout=10s": '
E                   'no endpoints available for service "istio-operator-service"',
E        'reason': 'Error',
E        'status': 'False',
E        'type': 'KserveReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'KueueReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'LlamaStackOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelControllerReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelMeshServingReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'ModelRegistryReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'RayReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrainingOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrustyAIReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'WorkbenchesReady'}],
E        'installedComponents': {'codeflare': True,
E        'dashboard': True,
E        'data-science-pipelines-operator': True,
E        'feastoperator': False,
E        'kserve': True,
E        'kueue': True,
E        'llamastackoperator': False,
E        'model-mesh': True,
E        'model-registry-operator': False,
E        'ray': True,
E        'trainingoperator': True,
E        'trustyai': True,
E        'workbenches': True},
E        'observedGeneration': 1,
E        'phase': 'Not Ready',
E        'release': {'name': 'OpenShift AI Self-Managed', 'version': '2.22.0'}}.

.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:179: TimeoutExpiredError[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

-------------------------------------------------------------- test_oci_model_car_raw_openai_inference[Qwen2.5-7B-Instruct-quantized.w4a16-raw] --------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarRaw.test_oci_model_car_raw_openai_inference[Qwen2.5-7B-Instruct-quantized.w4a16-raw] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:31.963614 conftest [31mERROR[0m request = <SubRequest 'cluster_sanity_scope_session' for <Function test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw]>>
nodes = [<ocp_resources.node.Node object at 0x109922d80>, <ocp_resources.node.Node object at 0x109922e70>, <ocp_resources.node...ject at 0x109922f30>, <ocp_resources.node.Node object at 0x109922f60>, <ocp_resources.node.Node object at 0x109922f90>]
dsci_resource = <ocp_resources.dsc_initialization.DSCInitialization object at 0x109864f20>, dsc_resource = <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>
junitxml_plugin = <function record_testsuite_property.<locals>.record_func at 0x109713d80>

    @pytest.fixture(scope="session")
    def cluster_sanity_scope_session(
        request: FixtureRequest,
        nodes: list[Node],
        dsci_resource: DSCInitialization,
        dsc_resource: DataScienceCluster,
        junitxml_plugin: Callable[[str, object], None],
    ) -> None:
>       verify_cluster_sanity(
            request=request,
            nodes=nodes,
            dsc_resource=dsc_resource,
            dsci_resource=dsci_resource,
            junitxml_property=junitxml_plugin,
        )

tests/conftest.py:588:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities/infra.py:1101: in verify_cluster_sanity
    wait_for_dsc_status_ready(dsc_resource=dsc_resource)
.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:276: in wrapper
    for sample in TimeoutSampler(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <timeout_sampler.TimeoutSampler object at 0x109865490>

    def __iter__(self) -> Any:
        """
        Call `func` and yield the result, or raise an exception on timeout.

        Yields:
            any: Return value from `func`

        Raises:
            TimeoutExpiredError: if `func` takes longer than `wait_timeout` seconds to return a value
        """
        timeout_watch = TimeoutWatch(timeout=self.wait_timeout)
        if self.print_log:
            log = (
                f"Waiting for {self.wait_timeout} seconds"
                f" [{datetime.timedelta(seconds=self.wait_timeout)}], retry every"
                f" {self.sleep} seconds."
            )

            if self.print_func_log:
                log += f" ({self._func_log})"

            LOGGER.info(log)

        last_exp = None
        elapsed_time = None
        while timeout_watch.remaining_time() > 0:
            try:
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()
                yield self.func(*self.func_args, **self.func_kwargs)
                time.sleep(self.sleep)
                elapsed_time = None

            except Exception as exp:
                last_exp = exp
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()

                if not self._should_ignore_exception(exp=last_exp):
                    raise TimeoutExpiredError(
                        self._get_exception_log(exp=last_exp), last_exp=last_exp, elapsed_time=elapsed_time
                    )

                time.sleep(self.sleep)
                elapsed_time = None

            finally:
                if self.print_log and elapsed_time:
                    LOGGER.info(_elapsed_time_log(elapsed_time=elapsed_time))

>       raise TimeoutExpiredError(self._get_exception_log(exp=last_exp), last_exp=last_exp)
E       timeout_sampler.TimeoutExpiredError: Timed Out: 120
E       Function: utilities.infra.wait_for_dsc_status_ready  Kwargs: {'dsc_resource': <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>}
E       Last exception: ResourceNotReadyError: DSC default-dsc is not ready.
E       Current status: {'components': {'codeflare': {'managementState': 'Managed',
E        'releases': [{'name': 'CodeFlare operator',
E        'repoUrl': 'https://github.com/project-codeflare/codeflare-operator',
E        'version': '1.15.0'}]},
E        'dashboard': {'managementState': 'Managed',
E        'url': 'rhods-dashboard-redhat-ods-applications.apps.ods-az-amd-02-pool-5smt9.azure.rh-ods.com'},
E        'datasciencepipelines': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Pipelines',
E        'repoUrl': 'https://github.com/kubeflow/pipelines',
E        'version': '2.5.0'}]},
E        'feastoperator': {'managementState': 'Removed'},
E        'kserve': {'defaultDeploymentMode': 'Serverless',
E        'managementState': 'Managed',
E        'releases': [{'name': 'KServe',
E        'repoUrl': 'https://github.com/kserve/kserve/',
E        'version': 'v0.14.0'}],
E        'serverlessMode': 'Managed'},
E        'kueue': {'managementState': 'Managed',
E        'releases': [{'name': 'kueue',
E        'repoUrl': 'https://github.com/kubernetes-sigs/kueue',
E        'version': '0.11.6'}]},
E        'llamastackoperator': {'managementState': 'Removed'},
E        'modelmeshserving': {'managementState': 'Managed',
E        'releases': [{'name': 'ModelMesh Serving',
E        'repoUrl': 'https://github.com/kserve/modelmesh-serving',
E        'version': 'v0.12.0'}]},
E        'modelregistry': {'managementState': 'Removed'},
E        'ray': {'managementState': 'Managed',
E        'releases': [{'name': 'KubeRay',
E        'repoUrl': 'https://github.com/ray-project/kuberay',
E        'version': '1.3.2'}]},
E        'trainingoperator': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Training Operator',
E        'repoUrl': 'https://github.com/kubeflow/trainer',
E        'version': '1.9.0'}]},
E        'trustyai': {'managementState': 'Managed',
E        'releases': [{'name': 'TrustyAI operator',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI service',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-explainability',
E        'version': 'v0.28.0'},
E                     {'name': 'TrustyAI LMEval driver',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI LMEval job',
E        'repoUrl': 'https://github.com/EleutherAI/lm-evaluation-harness',
E        'version': 'v0.4.8'},
E                     {'name': 'TrustyAI Guardrails orchestrator',
E        'repoUrl': 'https://github.com/foundation-model-stack/fms-guardrails-orchestrator',
E        'version': '0.9.4'},
E                     {'name': 'TrustyAI builtin detectors',
E        'repoUrl': 'https://github.com/trustyai-explainability/guardrails-regex-detector',
E        'version': 'v0.2.0'},
E                     {'name': 'TrustyAI sidecar gateway',
E        'repoUrl': 'https://github.com/trustyai-explainability/vllm-orchestrator-gateway',
E        'version': 'v0.2.1'}]},
E        'workbenches': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Notebook Controller',
E        'repoUrl': 'https://github.com/kubeflow/kubeflow',
E        'version': '1.10.0'}],
E        'workbenchNamespace': 'rhods-notebooks'}},
E        'conditions': [{'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'Ready'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'observedGeneration': 1,
E        'status': 'True',
E        'type': 'ProvisioningSucceeded'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'ComponentsReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'CodeFlareReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DashboardReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DataSciencePipelinesReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'FeastOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'failure deploying resource {map[apiVersion:maistra.io/v1 '
E                   'kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: apply failed maistra.io/v1, '
E                   'Kind=ServiceMeshMember: unable to patch object '
E                   '&{map[apiVersion:maistra.io/v1 kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: Internal error occurred: failed '
E                   'calling webhook "smm.validation.maistra.io": failed to call '
E                   'webhook: Post '
E                   '"https://istio-operator-service.openshift-operators.svc:443/validate-smm?timeout=10s": '
E                   'no endpoints available for service "istio-operator-service"',
E        'reason': 'Error',
E        'status': 'False',
E        'type': 'KserveReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'KueueReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'LlamaStackOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelControllerReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelMeshServingReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'ModelRegistryReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'RayReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrainingOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrustyAIReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'WorkbenchesReady'}],
E        'installedComponents': {'codeflare': True,
E        'dashboard': True,
E        'data-science-pipelines-operator': True,
E        'feastoperator': False,
E        'kserve': True,
E        'kueue': True,
E        'llamastackoperator': False,
E        'model-mesh': True,
E        'model-registry-operator': False,
E        'ray': True,
E        'trainingoperator': True,
E        'trustyai': True,
E        'workbenches': True},
E        'observedGeneration': 1,
E        'phase': 'Not Ready',
E        'release': {'name': 'OpenShift AI Self-Managed', 'version': '2.22.0'}}.

.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:179: TimeoutExpiredError[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

------------------------------------------------------------ test_oci_model_car_raw_openai_inference[DeepSeek-R1-Distill-Llama-8B-FP8-dynamic-raw] ------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarRaw.test_oci_model_car_raw_openai_inference[DeepSeek-R1-Distill-Llama-8B-FP8-dynamic-raw] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:32.061817 conftest [31mERROR[0m request = <SubRequest 'cluster_sanity_scope_session' for <Function test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw]>>
nodes = [<ocp_resources.node.Node object at 0x109922d80>, <ocp_resources.node.Node object at 0x109922e70>, <ocp_resources.node...ject at 0x109922f30>, <ocp_resources.node.Node object at 0x109922f60>, <ocp_resources.node.Node object at 0x109922f90>]
dsci_resource = <ocp_resources.dsc_initialization.DSCInitialization object at 0x109864f20>, dsc_resource = <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>
junitxml_plugin = <function record_testsuite_property.<locals>.record_func at 0x109713d80>

    @pytest.fixture(scope="session")
    def cluster_sanity_scope_session(
        request: FixtureRequest,
        nodes: list[Node],
        dsci_resource: DSCInitialization,
        dsc_resource: DataScienceCluster,
        junitxml_plugin: Callable[[str, object], None],
    ) -> None:
>       verify_cluster_sanity(
            request=request,
            nodes=nodes,
            dsc_resource=dsc_resource,
            dsci_resource=dsci_resource,
            junitxml_property=junitxml_plugin,
        )

tests/conftest.py:588:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities/infra.py:1101: in verify_cluster_sanity
    wait_for_dsc_status_ready(dsc_resource=dsc_resource)
.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:276: in wrapper
    for sample in TimeoutSampler(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <timeout_sampler.TimeoutSampler object at 0x109865490>

    def __iter__(self) -> Any:
        """
        Call `func` and yield the result, or raise an exception on timeout.

        Yields:
            any: Return value from `func`

        Raises:
            TimeoutExpiredError: if `func` takes longer than `wait_timeout` seconds to return a value
        """
        timeout_watch = TimeoutWatch(timeout=self.wait_timeout)
        if self.print_log:
            log = (
                f"Waiting for {self.wait_timeout} seconds"
                f" [{datetime.timedelta(seconds=self.wait_timeout)}], retry every"
                f" {self.sleep} seconds."
            )

            if self.print_func_log:
                log += f" ({self._func_log})"

            LOGGER.info(log)

        last_exp = None
        elapsed_time = None
        while timeout_watch.remaining_time() > 0:
            try:
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()
                yield self.func(*self.func_args, **self.func_kwargs)
                time.sleep(self.sleep)
                elapsed_time = None

            except Exception as exp:
                last_exp = exp
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()

                if not self._should_ignore_exception(exp=last_exp):
                    raise TimeoutExpiredError(
                        self._get_exception_log(exp=last_exp), last_exp=last_exp, elapsed_time=elapsed_time
                    )

                time.sleep(self.sleep)
                elapsed_time = None

            finally:
                if self.print_log and elapsed_time:
                    LOGGER.info(_elapsed_time_log(elapsed_time=elapsed_time))

>       raise TimeoutExpiredError(self._get_exception_log(exp=last_exp), last_exp=last_exp)
E       timeout_sampler.TimeoutExpiredError: Timed Out: 120
E       Function: utilities.infra.wait_for_dsc_status_ready  Kwargs: {'dsc_resource': <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>}
E       Last exception: ResourceNotReadyError: DSC default-dsc is not ready.
E       Current status: {'components': {'codeflare': {'managementState': 'Managed',
E        'releases': [{'name': 'CodeFlare operator',
E        'repoUrl': 'https://github.com/project-codeflare/codeflare-operator',
E        'version': '1.15.0'}]},
E        'dashboard': {'managementState': 'Managed',
E        'url': 'rhods-dashboard-redhat-ods-applications.apps.ods-az-amd-02-pool-5smt9.azure.rh-ods.com'},
E        'datasciencepipelines': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Pipelines',
E        'repoUrl': 'https://github.com/kubeflow/pipelines',
E        'version': '2.5.0'}]},
E        'feastoperator': {'managementState': 'Removed'},
E        'kserve': {'defaultDeploymentMode': 'Serverless',
E        'managementState': 'Managed',
E        'releases': [{'name': 'KServe',
E        'repoUrl': 'https://github.com/kserve/kserve/',
E        'version': 'v0.14.0'}],
E        'serverlessMode': 'Managed'},
E        'kueue': {'managementState': 'Managed',
E        'releases': [{'name': 'kueue',
E        'repoUrl': 'https://github.com/kubernetes-sigs/kueue',
E        'version': '0.11.6'}]},
E        'llamastackoperator': {'managementState': 'Removed'},
E        'modelmeshserving': {'managementState': 'Managed',
E        'releases': [{'name': 'ModelMesh Serving',
E        'repoUrl': 'https://github.com/kserve/modelmesh-serving',
E        'version': 'v0.12.0'}]},
E        'modelregistry': {'managementState': 'Removed'},
E        'ray': {'managementState': 'Managed',
E        'releases': [{'name': 'KubeRay',
E        'repoUrl': 'https://github.com/ray-project/kuberay',
E        'version': '1.3.2'}]},
E        'trainingoperator': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Training Operator',
E        'repoUrl': 'https://github.com/kubeflow/trainer',
E        'version': '1.9.0'}]},
E        'trustyai': {'managementState': 'Managed',
E        'releases': [{'name': 'TrustyAI operator',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI service',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-explainability',
E        'version': 'v0.28.0'},
E                     {'name': 'TrustyAI LMEval driver',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI LMEval job',
E        'repoUrl': 'https://github.com/EleutherAI/lm-evaluation-harness',
E        'version': 'v0.4.8'},
E                     {'name': 'TrustyAI Guardrails orchestrator',
E        'repoUrl': 'https://github.com/foundation-model-stack/fms-guardrails-orchestrator',
E        'version': '0.9.4'},
E                     {'name': 'TrustyAI builtin detectors',
E        'repoUrl': 'https://github.com/trustyai-explainability/guardrails-regex-detector',
E        'version': 'v0.2.0'},
E                     {'name': 'TrustyAI sidecar gateway',
E        'repoUrl': 'https://github.com/trustyai-explainability/vllm-orchestrator-gateway',
E        'version': 'v0.2.1'}]},
E        'workbenches': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Notebook Controller',
E        'repoUrl': 'https://github.com/kubeflow/kubeflow',
E        'version': '1.10.0'}],
E        'workbenchNamespace': 'rhods-notebooks'}},
E        'conditions': [{'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'Ready'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'observedGeneration': 1,
E        'status': 'True',
E        'type': 'ProvisioningSucceeded'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'ComponentsReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'CodeFlareReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DashboardReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DataSciencePipelinesReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'FeastOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'failure deploying resource {map[apiVersion:maistra.io/v1 '
E                   'kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: apply failed maistra.io/v1, '
E                   'Kind=ServiceMeshMember: unable to patch object '
E                   '&{map[apiVersion:maistra.io/v1 kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: Internal error occurred: failed '
E                   'calling webhook "smm.validation.maistra.io": failed to call '
E                   'webhook: Post '
E                   '"https://istio-operator-service.openshift-operators.svc:443/validate-smm?timeout=10s": '
E                   'no endpoints available for service "istio-operator-service"',
E        'reason': 'Error',
E        'status': 'False',
E        'type': 'KserveReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'KueueReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'LlamaStackOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelControllerReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelMeshServingReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'ModelRegistryReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'RayReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrainingOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrustyAIReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'WorkbenchesReady'}],
E        'installedComponents': {'codeflare': True,
E        'dashboard': True,
E        'data-science-pipelines-operator': True,
E        'feastoperator': False,
E        'kserve': True,
E        'kueue': True,
E        'llamastackoperator': False,
E        'model-mesh': True,
E        'model-registry-operator': False,
E        'ray': True,
E        'trainingoperator': True,
E        'trustyai': True,
E        'workbenches': True},
E        'observedGeneration': 1,
E        'phase': 'Not Ready',
E        'release': {'name': 'OpenShift AI Self-Managed', 'version': '2.22.0'}}.

.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:179: TimeoutExpiredError[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

--------------------------------------------------------------------- test_oci_model_car_raw_openai_inference[phi-4-quantized.w4a16-raw] ---------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarRaw.test_oci_model_car_raw_openai_inference[phi-4-quantized.w4a16-raw] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:32.108826 conftest [31mERROR[0m request = <SubRequest 'cluster_sanity_scope_session' for <Function test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw]>>
nodes = [<ocp_resources.node.Node object at 0x109922d80>, <ocp_resources.node.Node object at 0x109922e70>, <ocp_resources.node...ject at 0x109922f30>, <ocp_resources.node.Node object at 0x109922f60>, <ocp_resources.node.Node object at 0x109922f90>]
dsci_resource = <ocp_resources.dsc_initialization.DSCInitialization object at 0x109864f20>, dsc_resource = <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>
junitxml_plugin = <function record_testsuite_property.<locals>.record_func at 0x109713d80>

    @pytest.fixture(scope="session")
    def cluster_sanity_scope_session(
        request: FixtureRequest,
        nodes: list[Node],
        dsci_resource: DSCInitialization,
        dsc_resource: DataScienceCluster,
        junitxml_plugin: Callable[[str, object], None],
    ) -> None:
>       verify_cluster_sanity(
            request=request,
            nodes=nodes,
            dsc_resource=dsc_resource,
            dsci_resource=dsci_resource,
            junitxml_property=junitxml_plugin,
        )

tests/conftest.py:588:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities/infra.py:1101: in verify_cluster_sanity
    wait_for_dsc_status_ready(dsc_resource=dsc_resource)
.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:276: in wrapper
    for sample in TimeoutSampler(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <timeout_sampler.TimeoutSampler object at 0x109865490>

    def __iter__(self) -> Any:
        """
        Call `func` and yield the result, or raise an exception on timeout.

        Yields:
            any: Return value from `func`

        Raises:
            TimeoutExpiredError: if `func` takes longer than `wait_timeout` seconds to return a value
        """
        timeout_watch = TimeoutWatch(timeout=self.wait_timeout)
        if self.print_log:
            log = (
                f"Waiting for {self.wait_timeout} seconds"
                f" [{datetime.timedelta(seconds=self.wait_timeout)}], retry every"
                f" {self.sleep} seconds."
            )

            if self.print_func_log:
                log += f" ({self._func_log})"

            LOGGER.info(log)

        last_exp = None
        elapsed_time = None
        while timeout_watch.remaining_time() > 0:
            try:
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()
                yield self.func(*self.func_args, **self.func_kwargs)
                time.sleep(self.sleep)
                elapsed_time = None

            except Exception as exp:
                last_exp = exp
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()

                if not self._should_ignore_exception(exp=last_exp):
                    raise TimeoutExpiredError(
                        self._get_exception_log(exp=last_exp), last_exp=last_exp, elapsed_time=elapsed_time
                    )

                time.sleep(self.sleep)
                elapsed_time = None

            finally:
                if self.print_log and elapsed_time:
                    LOGGER.info(_elapsed_time_log(elapsed_time=elapsed_time))

>       raise TimeoutExpiredError(self._get_exception_log(exp=last_exp), last_exp=last_exp)
E       timeout_sampler.TimeoutExpiredError: Timed Out: 120
E       Function: utilities.infra.wait_for_dsc_status_ready  Kwargs: {'dsc_resource': <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>}
E       Last exception: ResourceNotReadyError: DSC default-dsc is not ready.
E       Current status: {'components': {'codeflare': {'managementState': 'Managed',
E        'releases': [{'name': 'CodeFlare operator',
E        'repoUrl': 'https://github.com/project-codeflare/codeflare-operator',
E        'version': '1.15.0'}]},
E        'dashboard': {'managementState': 'Managed',
E        'url': 'rhods-dashboard-redhat-ods-applications.apps.ods-az-amd-02-pool-5smt9.azure.rh-ods.com'},
E        'datasciencepipelines': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Pipelines',
E        'repoUrl': 'https://github.com/kubeflow/pipelines',
E        'version': '2.5.0'}]},
E        'feastoperator': {'managementState': 'Removed'},
E        'kserve': {'defaultDeploymentMode': 'Serverless',
E        'managementState': 'Managed',
E        'releases': [{'name': 'KServe',
E        'repoUrl': 'https://github.com/kserve/kserve/',
E        'version': 'v0.14.0'}],
E        'serverlessMode': 'Managed'},
E        'kueue': {'managementState': 'Managed',
E        'releases': [{'name': 'kueue',
E        'repoUrl': 'https://github.com/kubernetes-sigs/kueue',
E        'version': '0.11.6'}]},
E        'llamastackoperator': {'managementState': 'Removed'},
E        'modelmeshserving': {'managementState': 'Managed',
E        'releases': [{'name': 'ModelMesh Serving',
E        'repoUrl': 'https://github.com/kserve/modelmesh-serving',
E        'version': 'v0.12.0'}]},
E        'modelregistry': {'managementState': 'Removed'},
E        'ray': {'managementState': 'Managed',
E        'releases': [{'name': 'KubeRay',
E        'repoUrl': 'https://github.com/ray-project/kuberay',
E        'version': '1.3.2'}]},
E        'trainingoperator': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Training Operator',
E        'repoUrl': 'https://github.com/kubeflow/trainer',
E        'version': '1.9.0'}]},
E        'trustyai': {'managementState': 'Managed',
E        'releases': [{'name': 'TrustyAI operator',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI service',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-explainability',
E        'version': 'v0.28.0'},
E                     {'name': 'TrustyAI LMEval driver',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI LMEval job',
E        'repoUrl': 'https://github.com/EleutherAI/lm-evaluation-harness',
E        'version': 'v0.4.8'},
E                     {'name': 'TrustyAI Guardrails orchestrator',
E        'repoUrl': 'https://github.com/foundation-model-stack/fms-guardrails-orchestrator',
E        'version': '0.9.4'},
E                     {'name': 'TrustyAI builtin detectors',
E        'repoUrl': 'https://github.com/trustyai-explainability/guardrails-regex-detector',
E        'version': 'v0.2.0'},
E                     {'name': 'TrustyAI sidecar gateway',
E        'repoUrl': 'https://github.com/trustyai-explainability/vllm-orchestrator-gateway',
E        'version': 'v0.2.1'}]},
E        'workbenches': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Notebook Controller',
E        'repoUrl': 'https://github.com/kubeflow/kubeflow',
E        'version': '1.10.0'}],
E        'workbenchNamespace': 'rhods-notebooks'}},
E        'conditions': [{'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'Ready'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'observedGeneration': 1,
E        'status': 'True',
E        'type': 'ProvisioningSucceeded'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'ComponentsReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'CodeFlareReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DashboardReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DataSciencePipelinesReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'FeastOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'failure deploying resource {map[apiVersion:maistra.io/v1 '
E                   'kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: apply failed maistra.io/v1, '
E                   'Kind=ServiceMeshMember: unable to patch object '
E                   '&{map[apiVersion:maistra.io/v1 kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: Internal error occurred: failed '
E                   'calling webhook "smm.validation.maistra.io": failed to call '
E                   'webhook: Post '
E                   '"https://istio-operator-service.openshift-operators.svc:443/validate-smm?timeout=10s": '
E                   'no endpoints available for service "istio-operator-service"',
E        'reason': 'Error',
E        'status': 'False',
E        'type': 'KserveReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'KueueReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'LlamaStackOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelControllerReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelMeshServingReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'ModelRegistryReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'RayReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrainingOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrustyAIReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'WorkbenchesReady'}],
E        'installedComponents': {'codeflare': True,
E        'dashboard': True,
E        'data-science-pipelines-operator': True,
E        'feastoperator': False,
E        'kserve': True,
E        'kueue': True,
E        'llamastackoperator': False,
E        'model-mesh': True,
E        'model-registry-operator': False,
E        'ray': True,
E        'trainingoperator': True,
E        'trustyai': True,
E        'workbenches': True},
E        'observedGeneration': 1,
E        'phase': 'Not Ready',
E        'release': {'name': 'OpenShift AI Self-Managed', 'version': '2.22.0'}}.

.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:179: TimeoutExpiredError[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

---------------------------------------------------------------------- test_oci_model_car_raw_openai_inference[phi-4-quantized.w8a8-raw] ----------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarRaw.test_oci_model_car_raw_openai_inference[phi-4-quantized.w8a8-raw] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:32.150974 conftest [31mERROR[0m request = <SubRequest 'cluster_sanity_scope_session' for <Function test_oci_model_car_raw_openai_inference[granite-3.1-8b-base-quantized.w4a16-raw]>>
nodes = [<ocp_resources.node.Node object at 0x109922d80>, <ocp_resources.node.Node object at 0x109922e70>, <ocp_resources.node...ject at 0x109922f30>, <ocp_resources.node.Node object at 0x109922f60>, <ocp_resources.node.Node object at 0x109922f90>]
dsci_resource = <ocp_resources.dsc_initialization.DSCInitialization object at 0x109864f20>, dsc_resource = <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>
junitxml_plugin = <function record_testsuite_property.<locals>.record_func at 0x109713d80>

    @pytest.fixture(scope="session")
    def cluster_sanity_scope_session(
        request: FixtureRequest,
        nodes: list[Node],
        dsci_resource: DSCInitialization,
        dsc_resource: DataScienceCluster,
        junitxml_plugin: Callable[[str, object], None],
    ) -> None:
>       verify_cluster_sanity(
            request=request,
            nodes=nodes,
            dsc_resource=dsc_resource,
            dsci_resource=dsci_resource,
            junitxml_property=junitxml_plugin,
        )

tests/conftest.py:588:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
utilities/infra.py:1101: in verify_cluster_sanity
    wait_for_dsc_status_ready(dsc_resource=dsc_resource)
.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:276: in wrapper
    for sample in TimeoutSampler(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <timeout_sampler.TimeoutSampler object at 0x109865490>

    def __iter__(self) -> Any:
        """
        Call `func` and yield the result, or raise an exception on timeout.

        Yields:
            any: Return value from `func`

        Raises:
            TimeoutExpiredError: if `func` takes longer than `wait_timeout` seconds to return a value
        """
        timeout_watch = TimeoutWatch(timeout=self.wait_timeout)
        if self.print_log:
            log = (
                f"Waiting for {self.wait_timeout} seconds"
                f" [{datetime.timedelta(seconds=self.wait_timeout)}], retry every"
                f" {self.sleep} seconds."
            )

            if self.print_func_log:
                log += f" ({self._func_log})"

            LOGGER.info(log)

        last_exp = None
        elapsed_time = None
        while timeout_watch.remaining_time() > 0:
            try:
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()
                yield self.func(*self.func_args, **self.func_kwargs)
                time.sleep(self.sleep)
                elapsed_time = None

            except Exception as exp:
                last_exp = exp
                elapsed_time = self.wait_timeout - timeout_watch.remaining_time()

                if not self._should_ignore_exception(exp=last_exp):
                    raise TimeoutExpiredError(
                        self._get_exception_log(exp=last_exp), last_exp=last_exp, elapsed_time=elapsed_time
                    )

                time.sleep(self.sleep)
                elapsed_time = None

            finally:
                if self.print_log and elapsed_time:
                    LOGGER.info(_elapsed_time_log(elapsed_time=elapsed_time))

>       raise TimeoutExpiredError(self._get_exception_log(exp=last_exp), last_exp=last_exp)
E       timeout_sampler.TimeoutExpiredError: Timed Out: 120
E       Function: utilities.infra.wait_for_dsc_status_ready  Kwargs: {'dsc_resource': <ocp_resources.data_science_cluster.DataScienceCluster object at 0x10983ff50>}
E       Last exception: ResourceNotReadyError: DSC default-dsc is not ready.
E       Current status: {'components': {'codeflare': {'managementState': 'Managed',
E        'releases': [{'name': 'CodeFlare operator',
E        'repoUrl': 'https://github.com/project-codeflare/codeflare-operator',
E        'version': '1.15.0'}]},
E        'dashboard': {'managementState': 'Managed',
E        'url': 'rhods-dashboard-redhat-ods-applications.apps.ods-az-amd-02-pool-5smt9.azure.rh-ods.com'},
E        'datasciencepipelines': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Pipelines',
E        'repoUrl': 'https://github.com/kubeflow/pipelines',
E        'version': '2.5.0'}]},
E        'feastoperator': {'managementState': 'Removed'},
E        'kserve': {'defaultDeploymentMode': 'Serverless',
E        'managementState': 'Managed',
E        'releases': [{'name': 'KServe',
E        'repoUrl': 'https://github.com/kserve/kserve/',
E        'version': 'v0.14.0'}],
E        'serverlessMode': 'Managed'},
E        'kueue': {'managementState': 'Managed',
E        'releases': [{'name': 'kueue',
E        'repoUrl': 'https://github.com/kubernetes-sigs/kueue',
E        'version': '0.11.6'}]},
E        'llamastackoperator': {'managementState': 'Removed'},
E        'modelmeshserving': {'managementState': 'Managed',
E        'releases': [{'name': 'ModelMesh Serving',
E        'repoUrl': 'https://github.com/kserve/modelmesh-serving',
E        'version': 'v0.12.0'}]},
E        'modelregistry': {'managementState': 'Removed'},
E        'ray': {'managementState': 'Managed',
E        'releases': [{'name': 'KubeRay',
E        'repoUrl': 'https://github.com/ray-project/kuberay',
E        'version': '1.3.2'}]},
E        'trainingoperator': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Training Operator',
E        'repoUrl': 'https://github.com/kubeflow/trainer',
E        'version': '1.9.0'}]},
E        'trustyai': {'managementState': 'Managed',
E        'releases': [{'name': 'TrustyAI operator',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI service',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-explainability',
E        'version': 'v0.28.0'},
E                     {'name': 'TrustyAI LMEval driver',
E        'repoUrl': 'https://github.com/trustyai-explainability/trustyai-service-operator',
E        'version': 'v1.37.0'},
E                     {'name': 'TrustyAI LMEval job',
E        'repoUrl': 'https://github.com/EleutherAI/lm-evaluation-harness',
E        'version': 'v0.4.8'},
E                     {'name': 'TrustyAI Guardrails orchestrator',
E        'repoUrl': 'https://github.com/foundation-model-stack/fms-guardrails-orchestrator',
E        'version': '0.9.4'},
E                     {'name': 'TrustyAI builtin detectors',
E        'repoUrl': 'https://github.com/trustyai-explainability/guardrails-regex-detector',
E        'version': 'v0.2.0'},
E                     {'name': 'TrustyAI sidecar gateway',
E        'repoUrl': 'https://github.com/trustyai-explainability/vllm-orchestrator-gateway',
E        'version': 'v0.2.1'}]},
E        'workbenches': {'managementState': 'Managed',
E        'releases': [{'name': 'Kubeflow Notebook Controller',
E        'repoUrl': 'https://github.com/kubeflow/kubeflow',
E        'version': '1.10.0'}],
E        'workbenchNamespace': 'rhods-notebooks'}},
E        'conditions': [{'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'Ready'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'observedGeneration': 1,
E        'status': 'True',
E        'type': 'ProvisioningSucceeded'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Some components are not ready: '
E                   'codeflare,dashboard,datasciencepipelines,kserve,kueue,modelcontroller,modelmeshserving,ray,trainingoperator,trustyai,workbenches',
E        'reason': 'NotReady',
E        'status': 'False',
E        'type': 'ComponentsReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'CodeFlareReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DashboardReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'DataSciencePipelinesReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'FeastOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'failure deploying resource {map[apiVersion:maistra.io/v1 '
E                   'kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: apply failed maistra.io/v1, '
E                   'Kind=ServiceMeshMember: unable to patch object '
E                   '&{map[apiVersion:maistra.io/v1 kind:ServiceMeshMember '
E                   'metadata:map[annotations:map[platform.opendatahub.io/instance.generation:1 '
E                   'platform.opendatahub.io/instance.name:default-kserve '
E                   'platform.opendatahub.io/instance.uid:a1b231af-b822-43f9-869e-8fe681496965 '
E                   'platform.opendatahub.io/type:OpenShift AI Self-Managed '
E                   'platform.opendatahub.io/version:2.22.0] '
E                   'labels:map[platform.opendatahub.io/dependency:serverless '
E                   'platform.opendatahub.io/part-of:kserve] name:default '
E                   'namespace:knative-serving '
E                   'ownerReferences:[map[apiVersion:components.platform.opendatahub.io/v1alpha1 '
E                   'blockOwnerDeletion:%!s(bool=true) controller:%!s(bool=true) '
E                   'kind:Kserve name:default-kserve '
E                   'uid:a1b231af-b822-43f9-869e-8fe681496965]]] '
E                   'spec:map[controlPlaneRef:map[name:data-science-smcp '
E                   'namespace:istio-system]]]}: Internal error occurred: failed '
E                   'calling webhook "smm.validation.maistra.io": failed to call '
E                   'webhook: Post '
E                   '"https://istio-operator-service.openshift-operators.svc:443/validate-smm?timeout=10s": '
E                   'no endpoints available for service "istio-operator-service"',
E        'reason': 'Error',
E        'status': 'False',
E        'type': 'KserveReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'KueueReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'LlamaStackOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelControllerReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'ModelMeshServingReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': 'Component ManagementState is set to Removed',
E        'reason': 'Removed',
E        'severity': 'Info',
E        'status': 'False',
E        'type': 'ModelRegistryReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'RayReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrainingOperatorReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/1 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'TrustyAIReady'},
E                       {'lastTransitionTime': '2025-07-25T15:59:38Z',
E        'message': '0/2 deployments ready',
E        'reason': 'DeploymentsNotReady',
E        'status': 'False',
E        'type': 'WorkbenchesReady'}],
E        'installedComponents': {'codeflare': True,
E        'dashboard': True,
E        'data-science-pipelines-operator': True,
E        'feastoperator': False,
E        'kserve': True,
E        'kueue': True,
E        'llamastackoperator': False,
E        'model-mesh': True,
E        'model-registry-operator': False,
E        'ray': True,
E        'trainingoperator': True,
E        'trustyai': True,
E        'workbenches': True},
E        'observedGeneration': 1,
E        'phase': 'Not Ready',
E        'release': {'name': 'OpenShift AI Self-Managed', 'version': '2.22.0'}}.

.venv/lib/python3.12/site-packages/timeout_sampler/__init__.py:179: TimeoutExpiredError[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

------------------------------------------------------- test_oci_model_car_serverless_openai_inference[granite-3.1-8b-base-quantized.w4a16-serverless] -------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------
2025-07-25T12:00:32.152733 conftest [32mINFO[0m Executing package fixture: fail_if_missing_dependent_operators[0m
2025-07-25T12:00:34.082549 conftest [32mINFO[0m Verifying if servicemeshoperator is installed[0m
2025-07-25T12:00:35.185344 conftest [32mINFO[0m Verifying if authorino-operator is installed[0m
2025-07-25T12:00:36.007800 conftest [32mINFO[0m Verifying if serverless-operator is installed[0m

TEST: TestVLLMModelCarServerless.test_oci_model_car_serverless_openai_inference[granite-3.1-8b-base-quantized.w4a16-serverless] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:36.165150 conftest [31mERROR[0m fixturedef = <FixtureDef argname='fail_if_missing_dependent_operators' scope='package' baseid=''>
request = <SubRequest 'fail_if_missing_dependent_operators' for <Function test_oci_model_car_serverless_openai_inference[granite-3.1-8b-base-quantized.w4a16-serverless]>>

    @pytest.hookimpl(wrapper=True)
    def pytest_fixture_setup(fixturedef: FixtureDef, request) -> object | None:
        asyncio_mode = _get_asyncio_mode(request.config)
        if not _is_asyncio_fixture_function(fixturedef.func):
            if asyncio_mode == Mode.STRICT:
                # Ignore async fixtures without explicit asyncio mark in strict mode
                # This applies to pytest_trio fixtures, for example
>               return (yield)
                        ^^^^^

.venv/lib/python3.12/site-packages/pytest_asyncio/plugin.py:681:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

admin_client = <kubernetes.dynamic.client.DynamicClient object at 0x1080e5df0>

    @pytest.fixture(scope="package")
    def fail_if_missing_dependent_operators(admin_client: DynamicClient) -> None:
        if dependent_operators := py_config.get("dependent_operators"):
            missing_operators: list[str] = []

            for operator_name in dependent_operators.split(","):
                csvs = list(
                    ClusterServiceVersion.get(
                        dyn_client=admin_client,
                        namespace=py_config["applications_namespace"],
                    )
                )

                LOGGER.info(f"Verifying if {operator_name} is installed")
                for csv in csvs:
                    if csv.name.startswith(operator_name):
                        if csv.status == csv.Status.SUCCEEDED:
                            break

                        else:
                            missing_operators.append(
                                f"Operator {operator_name} is installed but CSV is not in {csv.Status.SUCCEEDED} state"
                            )

                else:
                    missing_operators.append(f"{operator_name} is not installed")

            if missing_operators:
>               pytest.fail(str(missing_operators))
E               Failed: ['Operator servicemeshoperator is installed but CSV is not in Succeeded state', 'servicemeshoperator is not installed', 'Operator authorino-operator is installed but CSV is not in Succeeded state', 'authorino-operator is not installed', 'Operator serverless-operator is installed but CSV is not in Succeeded state', 'serverless-operator is not installed']

conftest.py:475: Failed[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

------------------------------------------------------------ test_oci_model_car_serverless_openai_inference[granite-3.1-8b-starter-v2-serverless] ------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarServerless.test_oci_model_car_serverless_openai_inference[granite-3.1-8b-starter-v2-serverless] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:36.180803 conftest [31mERROR[0m admin_client = <kubernetes.dynamic.client.DynamicClient object at 0x1080e5df0>

    @pytest.fixture(scope="package")
    def fail_if_missing_dependent_operators(admin_client: DynamicClient) -> None:
        if dependent_operators := py_config.get("dependent_operators"):
            missing_operators: list[str] = []

            for operator_name in dependent_operators.split(","):
                csvs = list(
                    ClusterServiceVersion.get(
                        dyn_client=admin_client,
                        namespace=py_config["applications_namespace"],
                    )
                )

                LOGGER.info(f"Verifying if {operator_name} is installed")
                for csv in csvs:
                    if csv.name.startswith(operator_name):
                        if csv.status == csv.Status.SUCCEEDED:
                            break

                        else:
                            missing_operators.append(
                                f"Operator {operator_name} is installed but CSV is not in {csv.Status.SUCCEEDED} state"
                            )

                else:
                    missing_operators.append(f"{operator_name} is not installed")

            if missing_operators:
>               pytest.fail(str(missing_operators))
E               Failed: ['Operator servicemeshoperator is installed but CSV is not in Succeeded state', 'servicemeshoperator is not installed', 'Operator authorino-operator is installed but CSV is not in Succeeded state', 'authorino-operator is not installed', 'Operator serverless-operator is installed but CSV is not in Succeeded state', 'serverless-operator is not installed']

conftest.py:475: Failed[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

------------------------------------------------------ test_oci_model_car_serverless_openai_inference[granite-3.1-8b-instruct-quantized.w8a8-serverless] ------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarServerless.test_oci_model_car_serverless_openai_inference[granite-3.1-8b-instruct-quantized.w8a8-serverless] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:36.194703 conftest [31mERROR[0m admin_client = <kubernetes.dynamic.client.DynamicClient object at 0x1080e5df0>

    @pytest.fixture(scope="package")
    def fail_if_missing_dependent_operators(admin_client: DynamicClient) -> None:
        if dependent_operators := py_config.get("dependent_operators"):
            missing_operators: list[str] = []

            for operator_name in dependent_operators.split(","):
                csvs = list(
                    ClusterServiceVersion.get(
                        dyn_client=admin_client,
                        namespace=py_config["applications_namespace"],
                    )
                )

                LOGGER.info(f"Verifying if {operator_name} is installed")
                for csv in csvs:
                    if csv.name.startswith(operator_name):
                        if csv.status == csv.Status.SUCCEEDED:
                            break

                        else:
                            missing_operators.append(
                                f"Operator {operator_name} is installed but CSV is not in {csv.Status.SUCCEEDED} state"
                            )

                else:
                    missing_operators.append(f"{operator_name} is not installed")

            if missing_operators:
>               pytest.fail(str(missing_operators))
E               Failed: ['Operator servicemeshoperator is installed but CSV is not in Succeeded state', 'servicemeshoperator is not installed', 'Operator authorino-operator is installed but CSV is not in Succeeded state', 'authorino-operator is not installed', 'Operator serverless-operator is installed but CSV is not in Succeeded state', 'serverless-operator is not installed']

conftest.py:475: Failed[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

-------------------------------------------------------------- test_oci_model_car_serverless_openai_inference[Llama-3.1-8B-Instruct-serverless] --------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarServerless.test_oci_model_car_serverless_openai_inference[Llama-3.1-8B-Instruct-serverless] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:36.211404 conftest [31mERROR[0m admin_client = <kubernetes.dynamic.client.DynamicClient object at 0x1080e5df0>

    @pytest.fixture(scope="package")
    def fail_if_missing_dependent_operators(admin_client: DynamicClient) -> None:
        if dependent_operators := py_config.get("dependent_operators"):
            missing_operators: list[str] = []

            for operator_name in dependent_operators.split(","):
                csvs = list(
                    ClusterServiceVersion.get(
                        dyn_client=admin_client,
                        namespace=py_config["applications_namespace"],
                    )
                )

                LOGGER.info(f"Verifying if {operator_name} is installed")
                for csv in csvs:
                    if csv.name.startswith(operator_name):
                        if csv.status == csv.Status.SUCCEEDED:
                            break

                        else:
                            missing_operators.append(
                                f"Operator {operator_name} is installed but CSV is not in {csv.Status.SUCCEEDED} state"
                            )

                else:
                    missing_operators.append(f"{operator_name} is not installed")

            if missing_operators:
>               pytest.fail(str(missing_operators))
E               Failed: ['Operator servicemeshoperator is installed but CSV is not in Succeeded state', 'servicemeshoperator is not installed', 'Operator authorino-operator is installed but CSV is not in Succeeded state', 'authorino-operator is not installed', 'Operator serverless-operator is installed but CSV is not in Succeeded state', 'serverless-operator is not installed']

conftest.py:475: Failed[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

----------------------------------------------------- test_oci_model_car_serverless_openai_inference[Mistral-7B-Instruct-v0.3-quantized.w4a16-serverless] -----------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarServerless.test_oci_model_car_serverless_openai_inference[Mistral-7B-Instruct-v0.3-quantized.w4a16-serverless] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:36.225458 conftest [31mERROR[0m admin_client = <kubernetes.dynamic.client.DynamicClient object at 0x1080e5df0>

    @pytest.fixture(scope="package")
    def fail_if_missing_dependent_operators(admin_client: DynamicClient) -> None:
        if dependent_operators := py_config.get("dependent_operators"):
            missing_operators: list[str] = []

            for operator_name in dependent_operators.split(","):
                csvs = list(
                    ClusterServiceVersion.get(
                        dyn_client=admin_client,
                        namespace=py_config["applications_namespace"],
                    )
                )

                LOGGER.info(f"Verifying if {operator_name} is installed")
                for csv in csvs:
                    if csv.name.startswith(operator_name):
                        if csv.status == csv.Status.SUCCEEDED:
                            break

                        else:
                            missing_operators.append(
                                f"Operator {operator_name} is installed but CSV is not in {csv.Status.SUCCEEDED} state"
                            )

                else:
                    missing_operators.append(f"{operator_name} is not installed")

            if missing_operators:
>               pytest.fail(str(missing_operators))
E               Failed: ['Operator servicemeshoperator is installed but CSV is not in Succeeded state', 'servicemeshoperator is not installed', 'Operator authorino-operator is installed but CSV is not in Succeeded state', 'authorino-operator is not installed', 'Operator serverless-operator is installed but CSV is not in Succeeded state', 'serverless-operator is not installed']

conftest.py:475: Failed[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

-------------------------------------------------------- test_oci_model_car_serverless_openai_inference[Qwen2.5-7B-Instruct-quantized.w8a8-serverless] --------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarServerless.test_oci_model_car_serverless_openai_inference[Qwen2.5-7B-Instruct-quantized.w8a8-serverless] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:36.284310 conftest [31mERROR[0m admin_client = <kubernetes.dynamic.client.DynamicClient object at 0x1080e5df0>

    @pytest.fixture(scope="package")
    def fail_if_missing_dependent_operators(admin_client: DynamicClient) -> None:
        if dependent_operators := py_config.get("dependent_operators"):
            missing_operators: list[str] = []

            for operator_name in dependent_operators.split(","):
                csvs = list(
                    ClusterServiceVersion.get(
                        dyn_client=admin_client,
                        namespace=py_config["applications_namespace"],
                    )
                )

                LOGGER.info(f"Verifying if {operator_name} is installed")
                for csv in csvs:
                    if csv.name.startswith(operator_name):
                        if csv.status == csv.Status.SUCCEEDED:
                            break

                        else:
                            missing_operators.append(
                                f"Operator {operator_name} is installed but CSV is not in {csv.Status.SUCCEEDED} state"
                            )

                else:
                    missing_operators.append(f"{operator_name} is not installed")

            if missing_operators:
>               pytest.fail(str(missing_operators))
E               Failed: ['Operator servicemeshoperator is installed but CSV is not in Succeeded state', 'servicemeshoperator is not installed', 'Operator authorino-operator is installed but CSV is not in Succeeded state', 'authorino-operator is not installed', 'Operator serverless-operator is installed but CSV is not in Succeeded state', 'serverless-operator is not installed']

conftest.py:475: Failed[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

------------------------------------------------------- test_oci_model_car_serverless_openai_inference[Qwen2.5-7B-Instruct-quantized.w4a16-serverless] -------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarServerless.test_oci_model_car_serverless_openai_inference[Qwen2.5-7B-Instruct-quantized.w4a16-serverless] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:36.299977 conftest [31mERROR[0m admin_client = <kubernetes.dynamic.client.DynamicClient object at 0x1080e5df0>

    @pytest.fixture(scope="package")
    def fail_if_missing_dependent_operators(admin_client: DynamicClient) -> None:
        if dependent_operators := py_config.get("dependent_operators"):
            missing_operators: list[str] = []

            for operator_name in dependent_operators.split(","):
                csvs = list(
                    ClusterServiceVersion.get(
                        dyn_client=admin_client,
                        namespace=py_config["applications_namespace"],
                    )
                )

                LOGGER.info(f"Verifying if {operator_name} is installed")
                for csv in csvs:
                    if csv.name.startswith(operator_name):
                        if csv.status == csv.Status.SUCCEEDED:
                            break

                        else:
                            missing_operators.append(
                                f"Operator {operator_name} is installed but CSV is not in {csv.Status.SUCCEEDED} state"
                            )

                else:
                    missing_operators.append(f"{operator_name} is not installed")

            if missing_operators:
>               pytest.fail(str(missing_operators))
E               Failed: ['Operator servicemeshoperator is installed but CSV is not in Succeeded state', 'servicemeshoperator is not installed', 'Operator authorino-operator is installed but CSV is not in Succeeded state', 'authorino-operator is not installed', 'Operator serverless-operator is installed but CSV is not in Succeeded state', 'serverless-operator is not installed']

conftest.py:475: Failed[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

----------------------------------------------------- test_oci_model_car_serverless_openai_inference[DeepSeek-R1-Distill-Llama-8B-FP8-dynamic-serverless] -----------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarServerless.test_oci_model_car_serverless_openai_inference[DeepSeek-R1-Distill-Llama-8B-FP8-dynamic-serverless] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:36.314369 conftest [31mERROR[0m admin_client = <kubernetes.dynamic.client.DynamicClient object at 0x1080e5df0>

    @pytest.fixture(scope="package")
    def fail_if_missing_dependent_operators(admin_client: DynamicClient) -> None:
        if dependent_operators := py_config.get("dependent_operators"):
            missing_operators: list[str] = []

            for operator_name in dependent_operators.split(","):
                csvs = list(
                    ClusterServiceVersion.get(
                        dyn_client=admin_client,
                        namespace=py_config["applications_namespace"],
                    )
                )

                LOGGER.info(f"Verifying if {operator_name} is installed")
                for csv in csvs:
                    if csv.name.startswith(operator_name):
                        if csv.status == csv.Status.SUCCEEDED:
                            break

                        else:
                            missing_operators.append(
                                f"Operator {operator_name} is installed but CSV is not in {csv.Status.SUCCEEDED} state"
                            )

                else:
                    missing_operators.append(f"{operator_name} is not installed")

            if missing_operators:
>               pytest.fail(str(missing_operators))
E               Failed: ['Operator servicemeshoperator is installed but CSV is not in Succeeded state', 'servicemeshoperator is not installed', 'Operator authorino-operator is installed but CSV is not in Succeeded state', 'authorino-operator is not installed', 'Operator serverless-operator is installed but CSV is not in Succeeded state', 'serverless-operator is not installed']

conftest.py:475: Failed[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

-------------------------------------------------------------- test_oci_model_car_serverless_openai_inference[phi-4-quantized.w4a16-serverless] --------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarServerless.test_oci_model_car_serverless_openai_inference[phi-4-quantized.w4a16-serverless] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:36.328416 conftest [31mERROR[0m admin_client = <kubernetes.dynamic.client.DynamicClient object at 0x1080e5df0>

    @pytest.fixture(scope="package")
    def fail_if_missing_dependent_operators(admin_client: DynamicClient) -> None:
        if dependent_operators := py_config.get("dependent_operators"):
            missing_operators: list[str] = []

            for operator_name in dependent_operators.split(","):
                csvs = list(
                    ClusterServiceVersion.get(
                        dyn_client=admin_client,
                        namespace=py_config["applications_namespace"],
                    )
                )

                LOGGER.info(f"Verifying if {operator_name} is installed")
                for csv in csvs:
                    if csv.name.startswith(operator_name):
                        if csv.status == csv.Status.SUCCEEDED:
                            break

                        else:
                            missing_operators.append(
                                f"Operator {operator_name} is installed but CSV is not in {csv.Status.SUCCEEDED} state"
                            )

                else:
                    missing_operators.append(f"{operator_name} is not installed")

            if missing_operators:
>               pytest.fail(str(missing_operators))
E               Failed: ['Operator servicemeshoperator is installed but CSV is not in Succeeded state', 'servicemeshoperator is not installed', 'Operator authorino-operator is installed but CSV is not in Succeeded state', 'authorino-operator is not installed', 'Operator serverless-operator is installed but CSV is not in Succeeded state', 'serverless-operator is not installed']

conftest.py:475: Failed[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------

--------------------------------------------------------------- test_oci_model_car_serverless_openai_inference[phi-4-quantized.w8a8-serverless] ---------------------------------------------------------------
---------------------------------------------------------------------------------------------------- SETUP ----------------------------------------------------------------------------------------------------

TEST: TestVLLMModelCarServerless.test_oci_model_car_serverless_openai_inference[phi-4-quantized.w8a8-serverless] [setup] STATUS: [0;31mERROR[0m
2025-07-25T12:00:36.344226 conftest [31mERROR[0m admin_client = <kubernetes.dynamic.client.DynamicClient object at 0x1080e5df0>

    @pytest.fixture(scope="package")
    def fail_if_missing_dependent_operators(admin_client: DynamicClient) -> None:
        if dependent_operators := py_config.get("dependent_operators"):
            missing_operators: list[str] = []

            for operator_name in dependent_operators.split(","):
                csvs = list(
                    ClusterServiceVersion.get(
                        dyn_client=admin_client,
                        namespace=py_config["applications_namespace"],
                    )
                )

                LOGGER.info(f"Verifying if {operator_name} is installed")
                for csv in csvs:
                    if csv.name.startswith(operator_name):
                        if csv.status == csv.Status.SUCCEEDED:
                            break

                        else:
                            missing_operators.append(
                                f"Operator {operator_name} is installed but CSV is not in {csv.Status.SUCCEEDED} state"
                            )

                else:
                    missing_operators.append(f"{operator_name} is not installed")

            if missing_operators:
>               pytest.fail(str(missing_operators))
E               Failed: ['Operator servicemeshoperator is installed but CSV is not in Succeeded state', 'servicemeshoperator is not installed', 'Operator authorino-operator is installed but CSV is not in Succeeded state', 'authorino-operator is not installed', 'Operator serverless-operator is installed but CSV is not in Succeeded state', 'serverless-operator is not installed']

conftest.py:475: Failed[0m
-------------------------------------------------------------------------------------------------- TEARDOWN --------------------------------------------------------------------------------------------------
